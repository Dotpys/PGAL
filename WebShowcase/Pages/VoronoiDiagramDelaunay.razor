@page "/voronoi/delaunay"
@using System.Globalization
@using System.Numerics
@using System.Runtime.InteropServices.JavaScript
@using System.Text

<PageTitle>Delaunay Triangulation</PageTitle>

<h1>Delaunay Triangulation</h1>

<main>
	<section id="configuration">
		<h2>Configuration</h2>

		<h3>Site Generation</h3>

		<form>
			<label for="seed">Seed</label>
			<input type="number" id="seed" @bind="Seed" />
		</form>

		<form>
			<label for="input_site_count">Site Count</label>
			<input type="number" id="input_site_count" @bind="SiteCount" />
		</form>

		<button type="button" onclick="@(() => @GenerateSites())">Generate</button>
	</section>

	<section id="result">
		<h2>Result Image</h2>

		<svg id="viewport" viewBox="0 0 100 100" @onclick=OnSVGClick >

			@foreach (var triangle in triangulation)
			{
				<line style="stroke: rgba(128, 128, 128, 0.5)"
					x1="@triangle.a.X.ToString(CultureInfo.InvariantCulture)"
					y1="@triangle.a.Y.ToString(CultureInfo.InvariantCulture)"
					x2="@triangle.b.X.ToString(CultureInfo.InvariantCulture)"
					y2="@triangle.b.Y.ToString(CultureInfo.InvariantCulture)" />

				<line style="stroke: rgba(128, 128, 128, 0.5)"
					x1="@triangle.b.X.ToString(CultureInfo.InvariantCulture)"
					y1="@triangle.b.Y.ToString(CultureInfo.InvariantCulture)"
					x2="@triangle.c.X.ToString(CultureInfo.InvariantCulture)"
					y2="@triangle.c.Y.ToString(CultureInfo.InvariantCulture)" />

				<line style="stroke: rgba(128, 128, 128, 0.5)"
					x1="@triangle.a.X.ToString(CultureInfo.InvariantCulture)"
					y1="@triangle.a.Y.ToString(CultureInfo.InvariantCulture)"
					x2="@triangle.c.X.ToString(CultureInfo.InvariantCulture)"
					y2="@triangle.c.Y.ToString(CultureInfo.InvariantCulture)" />
			}

			<!--Sites-->
			@foreach (var site in sites)
			{
				<circle class="site"
					cx="@site.X.ToString(CultureInfo.InvariantCulture)"
					cy="@site.Y.ToString(CultureInfo.InvariantCulture)"
					r="1.5" />
			}

		</svg>

		<hr/>

		<h3>Controls</h3>
		<p>Click on the canvas above to insert new sites or to remove them.</p>

	</section>
</main>

@code
{
	private const float MAX_SIZE = 100f;
	private const int DEFAULT_SITE_COUNT = 8;

	public int Seed { get; set; } = 420;
	public int SiteCount { get; set; } = DEFAULT_SITE_COUNT;

	private List<Vector2> sites = [];

	private List<Triangle> triangulation = [];

	protected override async Task OnInitializedAsync()
	{
		await JSHost.ImportAsync("VoronoiDiagramDelaunay", "../Pages/VoronoiDiagramDelaunay.razor.js");
		GenerateSites();
	}

	private void GenerateSites()
	{
		sites.Clear();
		Random r = new Random(Seed);
		foreach (int i in Enumerable.Range(0, SiteCount))
		{
			float x = r.NextSingle() * MAX_SIZE;
			float y = r.NextSingle() * MAX_SIZE;
			sites.Add(new(x, y));
		}
		triangulation = sites.Triangulate();
		StateHasChanged();
	}

	private void OnSVGClick(MouseEventArgs e)
	{
		double[] svgCoords = GetSVGClickPosition(e.ClientX, e.ClientY);
		Vector2 point = new((float)svgCoords[0], (float)svgCoords[1]);
		if (sites.Any(s => Vector2.Distance(s, point) < 1.5))
		{
			Vector2 deletedSite = sites.Single(s => Vector2.Distance(s, point) < 1.5);
			sites.Remove(deletedSite);
		}
		else
		{
			sites.Add(point);
		}
		triangulation = sites.Triangulate();
		StateHasChanged();
	}
}
