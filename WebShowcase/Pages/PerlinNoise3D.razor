@page "/noise/perlin/3d"
@using System.Runtime.InteropServices.JavaScript
@using SixLabors.ImageSharp
@using SixLabors.ImageSharp.PixelFormats
@using System.Globalization

<PageTitle>Perlin Noise 3D</PageTitle>

<div class="row my-4">
	<h1 class="text-center">Perlin Noise 3D</h1>
</div>

<div class="row">
	<div class="col-12 col-lg-4 mb-3">
		<section class="card">
			<div class="card-header">Configuration:</div>
			<div class="card-body">

				<p>Perlin Noise</p>

				<div class="input-group mb-1">
					<label for="seed" class="input-group-text">Seed</label>
					<input type="number" class="form-control" id="seed" @bind="Seed" />
				</div>

				<div class="input-group mb-1">
					<label for="input_cell_count" class="input-group-text">Cell Count</label>
					<input type="number" class="form-control" id="input_cell_count" @bind="CellCount" />
				</div>

				<div class="form-check form-switch mb-1">
					<input class="form-check-input" type="checkbox" role="switch" id="check_wrap" @bind="Wrap">
					<label class="form-check-label" for="check_wrap">Wrap</label>
				</div>

				<hr />

				<p>Texture</p>

				<div class="input-group mb-1">
					<label for="texture_size" class="input-group-text">Texture Size</label>
					<input type="number" class="form-control" id="texture_size" @bind="TextureSize" />
					<span class="input-group-text">px</span>
				</div>
				
				<hr />

				<div class="d-grid p-0">
					<button class="btn btn-primary" type="button" @onclick="GenerateTexture">Generate</button>
				</div>
			</div>

		</section>
	</div>

	<div class="col-12 col-lg-8 mb-3">
		<section class="card">
			<div class="card-header">Result Image:</div>
			
			<div class="card-body body-texture">
				<img id="texture" src=@(frameUrls[FrameZ]) />
			</div>
			<div class="card-footer">
				<div>
					<label for="customRange1" class="form-label">Frame: @(FrameZ)</label>
					<input type="range" class="form-range" id="customRange1" min="0" max="@(TextureSize-1)" @bind="FrameZ" />
				</div>
			</div>
		</section>
	</div>
</div>

@code
{
	public int Seed { get; set; } = 420;
	public int CellCount { get; set; } = 8;
	public bool Wrap { get; set; } = false;

	public int TextureSize { get; set; } = 64;

	public uint FrameZ { get; set; } = 0;

	private string[] frameUrls = new string[64];

	protected override async Task OnInitializedAsync()
	{
		await JSHost.ImportAsync("PerlinNoise3D", "../Pages/PerlinNoise3D.razor.js");
		GenerateTexture();
	}

	private void GenerateTexture()
	{
		frameUrls = new string[TextureSize];

		PGAL.Noise.PerlinNoise3D noise = new(Seed, (uint) CellCount, Wrap);

		for (int z = 0; z < TextureSize; z++)
		{
			Rgba32[] textureData = new Rgba32[TextureSize * TextureSize];
			for (int y = 0; y < TextureSize; y++)
			{
				for (int x = 0; x < TextureSize; x++)
				{
					var sx = CellCount * (float)x / TextureSize;
					var sy = CellCount * (float)y / TextureSize;
					var sz = CellCount * (float)z / TextureSize;
					byte v = (byte)(noise.At(sx, sy, sz) * 255);
					textureData[TextureSize * y + x] = new Rgba32(v, v, v);
				}
			}

			Image<Rgba32> a = Image<Rgba32>.LoadPixelData(new ReadOnlySpan<Rgba32>(textureData), TextureSize, TextureSize);
			MemoryStream ms = new();
			a.SaveAsPng(ms);
			byte[] pngBuffer = ms.ToArray();

			frameUrls[z] = LoadFrame(pngBuffer);
		}
	}
}
